// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0

//! Generated certificate test data.
//!
//! Do not edit this file by hand; regenerate it with
//! `src/cert/testdata/generate.sh` instead. You'll need to install the
//! https://github.com/google/der-ascii tool first.

#[rustfmt::skip]
/// Generated from forty_two.der.
pub const FORTY_TWO: untrusted::Input = untrusted::Input::from(include_bytes!("der/forty_two.bin"));

#[rustfmt::skip]
/// Generated from false.der.
pub const FALSE: untrusted::Input = untrusted::Input::from(include_bytes!("der/false.bin"));

#[rustfmt::skip]
/// Generated from bits_partial_bad.der.
pub const BITS_PARTIAL_BAD: untrusted::Input = untrusted::Input::from(include_bytes!("der/bits_partial_bad.bin"));

#[rustfmt::skip]
/// Generated from bits_overflow.der.
pub const BITS_OVERFLOW: untrusted::Input = untrusted::Input::from(include_bytes!("der/bits_overflow.bin"));

#[rustfmt::skip]
/// Generated from huge_int.der.
pub const HUGE_INT: untrusted::Input = untrusted::Input::from(include_bytes!("der/huge_int.bin"));

#[rustfmt::skip]
/// Generated from indefinite_any.der.
pub const INDEFINITE_ANY: untrusted::Input = untrusted::Input::from(include_bytes!("der/indefinite_any.bin"));

#[rustfmt::skip]
/// Generated from long_form_tag.der.
pub const LONG_FORM_TAG: untrusted::Input = untrusted::Input::from(include_bytes!("der/long_form_tag.bin"));

#[rustfmt::skip]
/// Generated from negative.der.
pub const NEGATIVE: untrusted::Input = untrusted::Input::from(include_bytes!("der/negative.bin"));

#[rustfmt::skip]
/// Generated from one_twenty_eight.der.
pub const ONE_TWENTY_EIGHT: untrusted::Input = untrusted::Input::from(include_bytes!("der/one_twenty_eight.bin"));

#[rustfmt::skip]
/// Generated from bad_bool.der.
pub const BAD_BOOL: untrusted::Input = untrusted::Input::from(include_bytes!("der/bad_bool.bin"));

#[rustfmt::skip]
/// Generated from zero.der.
pub const ZERO: untrusted::Input = untrusted::Input::from(include_bytes!("der/zero.bin"));

#[rustfmt::skip]
/// Generated from nonempty_null.der.
pub const NONEMPTY_NULL: untrusted::Input = untrusted::Input::from(include_bytes!("der/nonempty_null.bin"));

#[rustfmt::skip]
/// Generated from bits_total.der.
pub const BITS_TOTAL: untrusted::Input = untrusted::Input::from(include_bytes!("der/bits_total.bin"));

#[rustfmt::skip]
/// Generated from null.der.
pub const NULL: untrusted::Input = untrusted::Input::from(include_bytes!("der/null.bin"));

#[rustfmt::skip]
/// Generated from true.der.
pub const TRUE: untrusted::Input = untrusted::Input::from(include_bytes!("der/true.bin"));

#[rustfmt::skip]
/// Generated from bits_partial.der.
pub const BITS_PARTIAL: untrusted::Input = untrusted::Input::from(include_bytes!("der/bits_partial.bin"));

#[rustfmt::skip]
/// Generated from short_form_any.der.
pub const SHORT_FORM_ANY: untrusted::Input = untrusted::Input::from(include_bytes!("der/short_form_any.bin"));

#[rustfmt::skip]
/// Generated from double_zero.der.
pub const DOUBLE_ZERO: untrusted::Input = untrusted::Input::from(include_bytes!("der/double_zero.bin"));

#[rustfmt::skip]
/// Generated from nine_thousand.der.
pub const NINE_THOUSAND: untrusted::Input = untrusted::Input::from(include_bytes!("der/nine_thousand.bin"));

#[rustfmt::skip]
/// Generated from long_form_any.der.
pub const LONG_FORM_ANY: untrusted::Input = untrusted::Input::from(include_bytes!("der/long_form_any.bin"));

#[rustfmt::skip]
/// Generated from empty.der.
pub const EMPTY: untrusted::Input = untrusted::Input::from(include_bytes!("der/empty.bin"));

#[rustfmt::skip]
/// Generated from x509_bad_missing_spki_rsa_modulus.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_SPKI_RSA_MODULUS: &[u8] = include_bytes!("der/x509_bad_missing_spki_rsa_modulus.bin");

#[rustfmt::skip]
/// Generated from x509_ok_unknown_default_criticality.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_OK_UNKNOWN_DEFAULT_CRITICALITY: &[u8] = include_bytes!("der/x509_ok_unknown_default_criticality.bin");

#[rustfmt::skip]
/// Generated from x509_bad_ca_without_cert_sign.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_CA_WITHOUT_CERT_SIGN: &[u8] = include_bytes!("der/x509_bad_ca_without_cert_sign.bin");

#[rustfmt::skip]
/// Generated from x509_sub_signed.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_SUB_SIGNED: &[u8] = include_bytes!("der/x509_sub_signed.bin");

#[rustfmt::skip]
/// Generated from x509_bad_cert_sign_with_other_use.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_CERT_SIGN_WITH_OTHER_USE: &[u8] = include_bytes!("der/x509_bad_cert_sign_with_other_use.bin");

#[rustfmt::skip]
/// Generated from x509_ok_no_ca_without_bc.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_OK_NO_CA_WITHOUT_BC: &[u8] = include_bytes!("der/x509_ok_no_ca_without_bc.bin");

#[rustfmt::skip]
/// Generated from x509_bad_unknown_critical.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_UNKNOWN_CRITICAL: &[u8] = include_bytes!("der/x509_bad_unknown_critical.bin");

#[rustfmt::skip]
/// Generated from x509_self_signed.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_SELF_SIGNED: &[u8] = include_bytes!("der/x509_self_signed.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_version.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_VERSION: &[u8] = include_bytes!("der/x509_bad_missing_version.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_subject.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_SUBJECT: &[u8] = include_bytes!("der/x509_bad_missing_subject.bin");

#[rustfmt::skip]
/// Generated from x509_bad_cert_sign_without_bc.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_CERT_SIGN_WITHOUT_BC: &[u8] = include_bytes!("der/x509_bad_cert_sign_without_bc.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_spki.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_SPKI: &[u8] = include_bytes!("der/x509_bad_missing_spki.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_issuer.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_ISSUER: &[u8] = include_bytes!("der/x509_bad_missing_issuer.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_serial.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_SERIAL: &[u8] = include_bytes!("der/x509_bad_missing_serial.bin");

#[rustfmt::skip]
/// Generated from x509_ok_unknown_noncritical.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_OK_UNKNOWN_NONCRITICAL: &[u8] = include_bytes!("der/x509_ok_unknown_noncritical.bin");

#[rustfmt::skip]
/// Generated from x509_bad_serial_too_long.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_SERIAL_TOO_LONG: &[u8] = include_bytes!("der/x509_bad_serial_too_long.bin");

#[rustfmt::skip]
/// Generated from x509_bad_different_sig_alg.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_DIFFERENT_SIG_ALG: &[u8] = include_bytes!("der/x509_bad_different_sig_alg.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_validty.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_VALIDTY: &[u8] = include_bytes!("der/x509_bad_missing_validty.bin");

#[rustfmt::skip]
/// Generated from x509_bad_wrong_version.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_WRONG_VERSION: &[u8] = include_bytes!("der/x509_bad_wrong_version.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_sig_alg.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_SIG_ALG: &[u8] = include_bytes!("der/x509_bad_missing_sig_alg.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_rsa_null.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_RSA_NULL: &[u8] = include_bytes!("der/x509_bad_missing_rsa_null.bin");

#[rustfmt::skip]
/// Generated from x509_bad_missing_extns.tbs.
/// Signed with ./../../crypto/testdata/rsa_2048_private_key.pk8.
pub const X509_BAD_MISSING_EXTNS: &[u8] = include_bytes!("der/x509_bad_missing_extns.bin");
